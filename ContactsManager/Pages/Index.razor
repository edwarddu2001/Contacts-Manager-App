@page "/"
@using System.ComponentModel.DataAnnotations
@inject MediatR.IMediator _mediator

<MudCard Elevation="25" Class="my-5">
    <MudCardContent>
        <MudTextField @bind-Value="name" Label="Name" Variant="Variant.Text"></MudTextField>
        <MudTextField @bind-Value="phoneNumber" Label="Phone Number" Variant="Variant.Text"></MudTextField>
        <br />
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="AddButtonClicked">Add</MudButton>
    </MudCardContent>
</MudCard>

<MudTable Items="@contacts" Hover="true" Elevation="25" Class="my-5">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Contacts</MudText>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Name</MudTh>
        <MudTh>Phone Number</MudTh>
    </HeaderContent>
    <RowTemplate>
        @foreach (var contact in contacts)
        {
            <MudTd DataLabel="Name">@contact.Name</MudTd>
            <MudTd DataLabel="PhoneNumber">@contact.PhoneNum</MudTd>
            <MudTd>
                <MudFab Color="Color.Secondary" Icon="@Icons.Material.Filled.Close" Size="Size.Small" OnClick="@(()=>RemoveButtonClicked(@contact.Name, @contact.PhoneNum))"></MudFab>
            </MudTd>
        }
    </RowTemplate>
</MudTable>

<br />

@code {
    public string name;
    public PhoneAttribute phoneNumber;
    List<ContactsViewModel> contacts = new();

    protected override async Task OnInitializedAsync()
    {
        await UpdateList();
    }

    private async Task UpdateList()
    {
        contacts = await _mediator.Send(new GetContactsQuery());
    }

    private async Task AddButtonClicked()
    {
        ContactsViewModel newContact = new ContactsViewModel()
        {
            Name = name,
            PhoneNum = phoneNumber
        };
        await _mediator.Send(new AddContactCommand(newContact));
        UpdateList();
    }

    private async Task RemoveButtonClicked(string Name, PhoneAttribute PhoneNumber)
    {
        ContactsViewModel newContact = new ContactsViewModel()
        {
            Name = Name,
            PhoneNum = PhoneNumber
        };
        await _mediator.Send(new RemoveContactCommand(newContact));
        UpdateList();
    }
}